!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-doughnut-chart",["exports","@angular/core","@angular/common"],n):n(t["ngx-doughnut-chart"]={},t.ng.core,t.ng.common)}(this,function(t,n,e){"use strict";var r=function(){function t(){}return t.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=n.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}();var o=function(){function t(){}return t.prototype.ngOnInit=function(){this.setDefaults();this._calculateAngles(this.data),this._calculateArcPoints(this.data)},t.prototype.setDefaults=function(){this.arcs=[],this.radius=this.radius||200,this.margin=this.margin||10,this.thickness=this.thickness||8,this.totalClass=this.totalClass||"c-donutchart__title",this.origin={x:this.radius,y:this.radius},this.width=2*this.radius+2*this.margin+"px",this.height=2*this.radius+2*this.margin+"px"},t.prototype._calculateArcPoints=function(t){[].push({x:this.radius,y:0});var n,e,r,o=0,a=this.origin.x,i=this.origin.y;try{for(var c=function d(t){var n="function"==typeof Symbol&&t[Symbol.iterator],e=0;return n?n.call(t):{next:function(){return t&&e>=t.length&&(t=void 0),{value:t&&t[e++],done:!t}}}}(t),s=c.next();!s.done;s=c.next()){var l=s.value;n=(o+l.angle)%360,o+=8;var u=this._describeArc(a,i,this.radius,o,n,l.color);this.arcs.push(u),o=n}}catch(h){e={error:h}}finally{try{s&&!s.done&&(r=c["return"])&&r.call(c)}finally{if(e)throw e.error}}},t.prototype._describeArc=function(t,n,e,r,o,a){var i=this._polarToCartesian(t,n,e,r),c=this._polarToCartesian(t,n,e,o),s=o-r<=180?"0":"1";return{d:["M",i.x,i.y,"A",e,e,0,s,1,c.x,c.y].join(" "),end:c,color:a}},t.prototype._calculateAngles=function(t){var n=[],e=this._getTotal(t);this.total=e;for(var r=0;r<t.length;r++){var o=t[r],a=o.value/e*360;o.angle=a,o.percentage=(o.value/e*100).toFixed(2)+"%",n.push(a)}return n},t.prototype._getTotal=function(t){return t.reduce(function(t,n){return{value:t.value+n.value}}).value},t.prototype._polarToCartesian=function(t,n,e,r){var o=r*Math.PI/180;return{x:t+e*Math.cos(o)+this.margin,y:n+e*Math.sin(o)+this.margin}},t.decorators=[{type:n.Component,args:[{selector:"ngx-donut-chart",template:'<div\n  class="c-donutchart"\n  [ngStyle]="{\'width\': width}">\n  <svg\n    [ngStyle]="{\'width\': width, \'height\': height}"\n    xmlns="http://www.w3.org/2000/svg">\n    \x3c!-- <path [attr.d]="pathD" stroke="black" fill="transparent" stroke-width="8" fill-opacity="0.5"/> --\x3e\n    <path\n      *ngFor="let arc of arcs"\n      [attr.d]="arc.d"\n      [attr.stroke]="arc.color"\n      fill="transparent"\n      [attr.stroke-width]="thickness"\n      fill-opacity="0.5"/>\n  </svg>\n\n  <div\n    class="c-donutchart__text"\n    *ngIf="title"\n    [ngStyle]="{\'width\': width, \'height\': height}">\n    <div\n      [ngClass]="totalClass"\n      [innerText]="total"></div>\n    <div [innerText]="title"></div>\n  </div>\n\n  <div class="c-donutchart__legends">\n    <div\n      class="c-donutchart__legend"\n      *ngFor="let item of data">\n      <div\n        class="c-donutchart__legend-bar"\n        [ngStyle]="{\'background-color\': item.color}">\n      </div>\n\n      <div\n        class="c-donutchart__legend-title"\n        [innerText]="item.label">\n      </div>\n\n      <div\n        class="c-donutchart__legend-percentage"\n        [innerText]="item.percentage">\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".c-donutchart{position:relative}.c-donutchart .c-donutchart__text{position:absolute;top:0;left:0;display:flex;flex-flow:column;align-items:center;justify-content:center}.c-donutchart .c-donutchart__title{font-size:40px}.c-donutchart .c-donutchart__legends{display:flex;justify-content:center}.c-donutchart .c-donutchart__legend{display:flex;flex-flow:column;align-items:center;margin:16px 8px}.c-donutchart .c-donutchart__legend-bar{display:flex;align-items:center;justify-content:center;margin-bottom:8px;width:40px;height:8px;border-radius:4px;background-color:#dc143c}.c-donutchart .c-donutchart__legend-percentage,.c-donutchart .c-donutchart__legend-title{text-align:center}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={data:[{type:n.Input}],radius:[{type:n.Input}],margin:[{type:n.Input}],title:[{type:n.Input}],thickness:[{type:n.Input}],totalClass:[{type:n.Input}]},t}(),a=function(){function t(){}return t.decorators=[{type:n.NgModule,args:[{imports:[e.CommonModule],declarations:[o],exports:[o]}]}],t}();t.NgxDonutChartService=r,t.NgxDonutChartComponent=o,t.NgxDonutChartModule=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-doughnut-chart.umd.min.js.map